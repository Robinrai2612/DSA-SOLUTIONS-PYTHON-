    def pacificAtlantic(self, heights: List[List[int]]) -> List[List[int]]:
        pacific = set()
        for i in range(len(heights[0])):
            dfs(len(heights)-1,i,-1,pacific,heights)
        for i in range(len(heights)):
            dfs(i,len(heights[0])-1,-1,pacific,heights)
            
        atlantic = set()
        for i in range(len(heights[0])):
            dfs(0,i,-1,atlantic,heights)
        for i in range(len(heights)):
            dfs(i,0,-1,atlantic,heights)
        
        return pacific.intersection(atlantic)
        
    
def dfs(row,col,prev_height,ocean,heights):
    if row < 0 or row >=len(heights):
        return
    if col < 0 or col >= len(heights[0]):
        return
    if (row,col) in ocean:
        return
    curr_height = heights[row][col]
    if curr_height < prev_height:
        return
    ocean.add((row,col))
    dfs(row-1,col,curr_height,ocean,heights)
    dfs(row+1,col,curr_height,ocean,heights)
    dfs(row,col-1,curr_height,ocean,heights)
    dfs(row,col+1,curr_height,ocean,heights)

