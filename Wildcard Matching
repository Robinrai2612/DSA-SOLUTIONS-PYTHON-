class Solution:
    def isMatch(self, s: str, p: str) -> bool:
        n, m = len(s), len(p)
        dp = [[False] * (m + 1) for i in range(n + 1)]
        dp[-1][-1] = True
        for i in range(n, -1, -1):
            for j in range(m - 1, -1, -1):
                if i == n:
                    if p[j] == '*': dp[i][j] = dp[i][j + 1]
                else:
                    if s[i] == p[j]: dp[i][j] = dp[i + 1][j + 1]
                    else:
                        if p[j] == '?': dp[i][j] = dp[i + 1][j + 1]
                        elif p[j] == '*': dp[i][j] = dp[i + 1][j] or dp[i + 1][j + 1] or dp[i][j + 1]
                        else: dp[i][j] = False
        
        return dp[0][0]
        
        return
