class Solution:
    def tree2str(self, root: Optional[TreeNode]) -> str:
        def t(node,s):
            if node is None:
                return ''
            elif node.left is None and node.right is None:
                return str(node.val)
            elif node.right is None:
                s+=str(node.val)+'('+t(node.left,s)+')'
            
            else:
                s+=str(node.val)+'('+t(node.left,s)+')('+t(node.right,s)+')'
            return s
        
        return t(root,"") 
        
