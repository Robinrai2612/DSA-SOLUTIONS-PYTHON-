class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        if p.val > q.val:
            p, q = q, p # making sure that q will be the upper limit
            
        def helper(root):
            if root == None:
                return None
            
            if p.val <= root.val <= q.val: # return first root that falls into this range because that will be LCA.
                return root
            
            if root.val < p.val:
                return helper(root.right)
            if root.val > q.val:
                return helper(root.left)
        
        return helper(root)
        
